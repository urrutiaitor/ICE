// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `WalkieTalkieEar.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package walkieTalkie;

public final class EarPrxHelper extends Ice.ObjectPrxHelperBase implements EarPrx
{
    private static final String __pushMesssage_name = "pushMesssage";

    public void pushMesssage(String msg)
    {
        pushMesssage(msg, null, false);
    }

    public void pushMesssage(String msg, java.util.Map<String, String> __ctx)
    {
        pushMesssage(msg, __ctx, true);
    }

    private void pushMesssage(String msg, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_pushMesssage(begin_pushMesssage(msg, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_pushMesssage(String msg)
    {
        return begin_pushMesssage(msg, null, false, false, null);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, java.util.Map<String, String> __ctx)
    {
        return begin_pushMesssage(msg, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, Ice.Callback __cb)
    {
        return begin_pushMesssage(msg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_pushMesssage(msg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, Callback_Ear_pushMesssage __cb)
    {
        return begin_pushMesssage(msg, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, java.util.Map<String, String> __ctx, Callback_Ear_pushMesssage __cb)
    {
        return begin_pushMesssage(msg, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_pushMesssage(msg, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pushMesssage(msg, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_pushMesssage(msg, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_pushMesssage(String msg, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_VoidCallback __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pushMesssage(msg, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_pushMesssage(String msg, 
                                               java.util.Map<String, String> __ctx, 
                                               boolean __explicitCtx, 
                                               boolean __synchronous, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_pushMesssage(msg, 
                                  __ctx, 
                                  __explicitCtx, 
                                  __synchronous, 
                                  new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_pushMesssage(String msg, 
                                               java.util.Map<String, String> __ctx, 
                                               boolean __explicitCtx, 
                                               boolean __synchronous, 
                                               IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__pushMesssage_name, __cb);
        try
        {
            __result.prepare(__pushMesssage_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(msg);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_pushMesssage(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __pushMesssage_name);
    }

    public static EarPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), EarPrx.class, EarPrxHelper.class);
    }

    public static EarPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), EarPrx.class, EarPrxHelper.class);
    }

    public static EarPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), EarPrx.class, EarPrxHelper.class);
    }

    public static EarPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), EarPrx.class, EarPrxHelper.class);
    }

    public static EarPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, EarPrx.class, EarPrxHelper.class);
    }

    public static EarPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, EarPrx.class, EarPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::walkieTalkie::Ear"
    };

    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, EarPrx v)
    {
        __os.writeProxy(v);
    }

    public static EarPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            EarPrxHelper result = new EarPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
