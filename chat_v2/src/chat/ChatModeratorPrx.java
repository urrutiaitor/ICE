// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `Chat.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package chat;

public interface ChatModeratorPrx extends Ice.ObjectPrx
{
    public boolean registerNewListener(ListenerPrx aListener);

    public boolean registerNewListener(ListenerPrx aListener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, Ice.Callback __cb);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, Callback_ChatModerator_registerNewListener __cb);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, java.util.Map<String, String> __ctx, Callback_ChatModerator_registerNewListener __cb);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, 
                                                     IceInternal.Functional_BoolCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, 
                                                     IceInternal.Functional_BoolCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_BoolCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_registerNewListener(ListenerPrx aListener, 
                                                     java.util.Map<String, String> __ctx, 
                                                     IceInternal.Functional_BoolCallback __responseCb, 
                                                     IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                     IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_registerNewListener(Ice.AsyncResult __result);

    public boolean deleteListener(ListenerPrx aListener);

    public boolean deleteListener(ListenerPrx aListener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, Callback_ChatModerator_deleteListener __cb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, java.util.Map<String, String> __ctx, Callback_ChatModerator_deleteListener __cb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, 
                                                IceInternal.Functional_BoolCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, 
                                                IceInternal.Functional_BoolCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_BoolCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx aListener, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_BoolCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_deleteListener(Ice.AsyncResult __result);

    public void pushMessage(String msg, ListenerPrx senderAssociatedListener);

    public void pushMessage(String msg, ListenerPrx senderAssociatedListener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pushMessage(String msg, ListenerPrx senderAssociatedListener);

    public Ice.AsyncResult begin_pushMessage(String msg, ListenerPrx senderAssociatedListener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pushMessage(String msg, ListenerPrx senderAssociatedListener, Ice.Callback __cb);

    public Ice.AsyncResult begin_pushMessage(String msg, ListenerPrx senderAssociatedListener, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_pushMessage(String msg, ListenerPrx senderAssociatedListener, Callback_ChatModerator_pushMessage __cb);

    public Ice.AsyncResult begin_pushMessage(String msg, ListenerPrx senderAssociatedListener, java.util.Map<String, String> __ctx, Callback_ChatModerator_pushMessage __cb);

    public Ice.AsyncResult begin_pushMessage(String msg, 
                                             ListenerPrx senderAssociatedListener, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_pushMessage(String msg, 
                                             ListenerPrx senderAssociatedListener, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_pushMessage(String msg, 
                                             ListenerPrx senderAssociatedListener, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_pushMessage(String msg, 
                                             ListenerPrx senderAssociatedListener, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public void end_pushMessage(Ice.AsyncResult __result);

    public boolean getMessage(int msgNumer, Ice.StringHolder msg);

    public boolean getMessage(int msgNumer, Ice.StringHolder msg, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMessage(int msgNumer);

    public Ice.AsyncResult begin_getMessage(int msgNumer, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMessage(int msgNumer, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMessage(int msgNumer, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMessage(int msgNumer, Callback_ChatModerator_getMessage __cb);

    public Ice.AsyncResult begin_getMessage(int msgNumer, java.util.Map<String, String> __ctx, Callback_ChatModerator_getMessage __cb);

    public interface FunctionalCallback_ChatModerator_getMessage_Response
    {
        void apply(boolean __ret, String msg);
    }

    public Ice.AsyncResult begin_getMessage(int msgNumer, 
                                            FunctionalCallback_ChatModerator_getMessage_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getMessage(int msgNumer, 
                                            FunctionalCallback_ChatModerator_getMessage_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getMessage(int msgNumer, 
                                            java.util.Map<String, String> __ctx, 
                                            FunctionalCallback_ChatModerator_getMessage_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getMessage(int msgNumer, 
                                            java.util.Map<String, String> __ctx, 
                                            FunctionalCallback_ChatModerator_getMessage_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_getMessage(Ice.StringHolder msg, Ice.AsyncResult __result);
}
